<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        DgAAAk1TRnQBSQFMAgEBBgEAAQgBAAEIAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAYP9gAGD/YAAD/wEAAYACAAGAAgABgAIAAYACAAGAAgABgAIAAYACAAGA
        AgABgAIAAYACAAGAAgABgAIAAYABAAn/AQABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAIAAYACAAGA
        AgABgAIAAYACAAGAAgABgAEABv9gAAP/AQABgAEAIf8BAAGAAQAJ/wEAAYABACH/AQABgAEABv9gAAP/
        AQABgAEAIf8BAAGAAQAJ/wEAAYABACH/AQABgAEABv9gAAP/AQABgAEABv8BAAGAAgABgAIAAYACAAGA
        AgABgAIAAYACAAGAAQAG/wEAAYABAAn/AQABgAEAIf8BAAGAAQAG/2AAA/8BAAGAAQAG/wEAAYACAAGA
        AgABgAIAAYACAAGAAgABgAIAAYABAAb/AQABgAEACf8BAAGAAQAh/wEAAYABAAb/YAAD/wEAAYABAAb/
        AQABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAEABv8BAAGAAQAJ/wEAAYABACH/AQABgAEABv9gAAP/
        AQABgAEABv8BAAGAAgABgAIAAYACAAGAAgABgAIAAYACAAGAAQAG/wEAAYABAAn/AQABgAEAIf8BAAGA
        AQAG/2AAA/8BAAGAAQAG/wEAAYACAAGAAgABgAIAAYACAAGAAgABgAIAAYABAAb/AQABgAEACf8BAAGA
        AQAh/wEAAYABAAb/YAAD/wEAAYABAAb/AQABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAEABv8BAAGA
        AQAJ/wEAAYABACH/AQABgAEABv9gAAP/AQABgAEABv8BAAGAAgABgAIAAYACAAGAAgABgAIAAYACAAGA
        AQAG/wEAAYABAAn/AQABgAEAIf8BAAGAAQAG/2AAA/8BAAGAAQAh/wEAAYABAAn/AQABgAEAIf8BAAGA
        AQAG/2AAA/8BAAGAAQAh/wEAAYABAAn/AQABgAEAIf8BAAGAAQAG/2AAA/8BAAGAAgABgAIAAYACAAGA
        AgABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAIAAYACAAGAAQAJ/wEAAYACAAGAAgABgAIAAYACAAGA
        AgABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAIAAYABAAb/YABg/2AA//+E/wF1AYQBjwFsAXoBhQFg
        AW0BdwFRAV0BZgFCAUwBVAExAToBQQEjASoBMAEWARwBIQEOARMBGAEOARMBGAEOARMBGAEOARMBGAEO
        ARMBGAEOARMBGAEOARMBGDD/A/oDbQPGA/8DowN0A/oD7gNiA90D/waKA/4J/wEAAYACAAGAAgABgAIA
        AYACAAGAAgABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAIAAYABAAn/AXcBhwGSAaIB3wHwAXABzQHq
        AUkBuAHiATcBrgHbAS0BqQHZASYBoQHSASEBmAHHASABjgG8AR4BgwGuARkBfwGrARUBfAGpARsBdwGf
        AR8BcgGWARYBHAEhAXUBhAGPAWYBgAGPAWABeQGHAVcBbgF7AU4BYgFvAUQBVgFhATkBSAFSAS4BOgFD
        ASUBLgE1ARsBIgEpARQBGQEeAQ4BEgEWAQ4BEwEYCf8D9wMuA7IDqANvA4ADewPjAx4DzwOQBncDiwn/
        AQABgAEAIf8BAAGAAQAJ/wF6AYoBlQGqAegB9gGVAeUB/AGEAd8B+wF1AdYB+gFqAdAB9wFdAcYB9AFQ
        Ab4B8AFBAbQB7AE1AaoB6AErAaQB5gEgAZoB3wEWAZAB1wEbAXcBnwEgAScBLQF3AYcBkgGJAaEBqwFq
        AbIB1AEAAY8BzQEAAY8BzQEAAY8BzQEEAYwBxwEIAYgBvgEPAYIBtAEVAXwBqQEbAXcBnwEfAXIBlgEi
        AUsBXAGbAa0BtQb/A/cDLgOyA6gDbwOAA3sD4wMeA88DkAZ3A4sJ/wEAAYABACH/AQABgAEACf8BfQGO
        AZgBsAHqAfYBnwHpAfsBkgHkAfwBgQHdAfsBdQHWAfoBaAHOAfcBXQHGAfQBTQG8AfABQQG0AewBNQGq
        AegBKgGjAeYBHQGWAdwBFQF8AakBLQE0ATsBegGKAZUBfgG+AdMBigGkAa4BfgHcAf8BXwHPAf8BVQHL
        Af8BTAHEAfoBQQG8AfUBNwGzAfABLgGqAesBJAGgAeUBEwGMAdQBIwFnAYABXgFpAW0G/wP6A24DxgP/
        A6MDdgP/A+8DYwPdA/8DiwONDP8BAAGAAQAM/wEAAYABABL/AQABgAEACf8BgAGRAZwBtgHtAfgBqgHs
        AfsBmwHoAfsBjwHjAfwBgQHdAfsBcQHVAfkBaAHOAfcBWwHFAfQBTQG8AfABPQGyAewBMgGpAegBJAGe
        AeIBEAGCAbQBOwFDAUsBfQGOAZgBeQHSAewBiwGkAa0BiQHCAc4BcQHYAf8BZQHTAf8BXAHOAf8BUQHJ
        Af4BSQHBAfoBPwG5AfUBNAGwAe4BKQGoAekBEAGFAc0BIgFLAVsBsgHAAcYJ/wPbA+cD/wPwA9gG/gPW
        A+0D/wPpA90J/wEAAYABAAn/AQABgAIAAYACAAGAAQAP/wEAAYABAAn/AYMBlQGfAb4B8AH5AasB8AH3
        AaUB7AH7AZgB5wH7AYkB4QH8AX8B3QH7AXEB1QH5AWUBzQH3AVgBxAHzAUsBuwHwAT0BsgHsASwBpAHj
        AQwBigG/AUkBUwFcAYABkQGcAYEB1wHvAX0BxQHgAYwBpgGwAYAB3QH+AWgB0wH/AWcB1AH/AWIB0QH/
        AVgBzQH/AU4BxwH8AUYBvgH3ATsBtgHyATEBrAHsASUBaQGBAXoBlQGhA/8D/gPdA08DfQP0A7ADMgP0
        A9EDPgOXA/oDjgNKCf8BAAGAAQAG/wEAAYACAAGAAgABgAIAAYACAAGAAQAM/wEAAYABAAn/AYYBmQGj
        Ab4B8AH5AbYB7QH4AbAB7gH6AaQB6wH6AZUB5gH7AYkB4QH8AX0B3AH8AXEB1QH5AWUBzQH3AVgBxAHz
        AUkBuQHvATUBqQHnAQwBjwHHAVcBYwFrAYMBlQGfAYkB3AHxAYwB4gH/AY0BqAGxAYwBugHHAXQB2AH/
        AWcB1AH/AWcB1AH/AWcB1AH/AV8B0AH/AVQBzQH/AUsBxQH8AUEBuwH3AS4BogHbAVEBZwF0AbIBwAHG
        A/gDRQOmA24DfgO0Ay4D4wM2A7wDUwOfA5EDRQn/AQABgAEABv8BAAGAAgABgAEAA/8BAAGAAgABgAIA
        AYABAAn/AQABgAEACf8BiQGcAaYBvgHwAfkBtgHtAfgBtgHtAfgBqwHwAfcBogHsAfoBlQHmAfsBiQHh
        AfwBfQHcAfwBbwHTAfoBYwHMAfcBVQHDAfMBSQG5Ae8BGQGZAc8BYwFwAXoBhgGaAaMBkgHhAfIBmAHo
        Af0BgAHEAd4BjgGnAbABgQHeAf0BhAHgAf8BhAHgAf8BhAHgAf8BhAHgAf8BgQHfAf8BewHdAf8BdAHY
        Af8BawHWAf8BVgGpAdEBjwGbAaQD/QPJA1MDdwPlA68DLQPyA70DRwOLA+8DiwNFCf8BAAGAAQAG/wEA
        AYABAAn/AQABgAIAAYACAAGAAQAG/wEAAYABAAn/AYsBoAGoAb4B8AH5Ab4B8AH5Ab4B8AH5Ab4B8AH5
        AbQB8gH4AaoB7AH7AaAB6QH7AZUB5QH8AYoB3wH8AX8B2AH7AXQB0gH4AWgBygH0AV0BwAHxAWMBcAF6
        AYgBnAGlAZoB5gHzAZ8B6wH7AZgB6AH+AYsBrAG5AYsBrAG5AYoBqgG3AYgBpgGzAYYBowGvAYMBnwGq
        AYEBmgGmAX8BlQGhAXwBkQGdAXoBjgGZAXkBiwGVAXcBiAGTBv8DwwPYA/8D5wPABv0DuwPjA/8D3API
        Cf8BAAGAAQAV/wEAAYACAAGAAQAG/wEAAYABAAn/AY0BoQGqAY0BoQGqAY0BoQGqAY0BoQGqAY0BoQGq
        AYsBnwGoAYkBnAGmAYkBmwGmAYcBmgGkAYYBmQGjAYQBlgGgAYQBlgGgAYMBlQGgAYMBlQGgAXUBhAGP
        AYsBoAGoAaAB6gH2AaYB7gH5AZ8B6wH7AZgB6AH+AXoB2gH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/
        AWcB1AH/AWcB1AH/AXcBiAGTCf8D+wOJA9ED/wO1A48D/wPyA4AD4wP/A6ADogz/AQABgAEAGP8BAAGA
        AQAG/wEAAYABAAn/AY8BpAGsAbIB5AHsAbYB7QH4AbYB7QH4AakB7AH2AZIB4QHzAY0BoQGqAdUB3AHg
        Ff8BjgGiAasBpwHuAfYBqwHwAfcBpgHuAfkBnwHrAfsBmAHoAf0BcQHUAfsBiQGeAacBhgGZAaMBggGU
        AZ8BfgGQAZoBegGMAZcBdwGIAZMJ/wP3Ay4DsQO9A3ADbgOWA+QDHgPPA6kGbgOjCf8BAAGAAQAh/wEA
        AYABAAn/AdoB3gHhAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsAdUB3AHgGP8BjwGkAawBoAHS
        AdoBqwHwAfcBqwHwAfcBpgHuAfkBnwHrAfsBjQGhAaoB1QHcAeAY/wP3Ay4DswOVA24DkQNjA+IDHgPQ
        A3oGgAN1Cf8BAAGAAQAh/wEAAYABADb/AdoB3gHhAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGs
        AdUB3AHgG/8D+QNWA70D/wOUA2ID9QPsA0kD1wP9BnoD+Qn/AQABgAIAAYACAAGAAgABgAIAAYACAAGA
        AgABgAIAAYACAAGAAgABgAIAAYACAAGAAgABgAEAaf8D+AP8A/8D+wP5Bv4D+AP9A/8G+jn/AUIBTQE+
        BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA///AAIACw==
</value>
  </data>
</root>