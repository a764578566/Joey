<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.string" name="TestName" #>
<#@ parameter type="System.string" name="ClassName" #>
<#@ parameter type="System.string" name="DomainServiceName" #>
<#@ parameter type="System.string" name="EntityName" #>
using Mysoft.Clgyl.<#=        this.ClassName#>.DomainServices;
using Mysoft.Clgyl.<#=        this.ClassName#>.DomainServices.Fakes;
using Mysoft.Clgyl.<#=        this.ClassName#>.Model;
using Mysoft.Clgyl.Utility;
using Mysoft.Map6.Platform.Services;
using Mysoft.Map6.Platform.Services.Fakes;
using Mysoft.Map6.Core.Pipeline;
using Mysoft.Map6.TestCore;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mysoft.Clgyl.<#=        this.ClassName#>.UnitTest.DomainServices
{
	/// <summary>
    /// 单测 
    /// </summary>
    [TestFixture]
    public class <#=        this.TestName #>
    {
		private readonly <#=        this.DomainServiceName#> _<#=        this.DomainServiceName[0].ToString().ToLower()+ this.DomainServiceName.Substring(1, this.DomainServiceName.Length - 1)#> = new <#=        this.DomainServiceName#>();

        private readonly EntityMocker<<#=        this.EntityName#>> _<#=        this.EntityName[0].ToString().ToLower()+this.EntityName.Substring(1, this.EntityName.Length - 1)#>Mock = new EntityMocker<<#=        this.EntityName#>>();
        
        private readonly StubFormEntityDomainService _formEntity = new StubFormEntityDomainService();

        #region 接口服务
        #endregion

        private readonly string _<#=        this.EntityName[0].ToString().ToLower()+this.EntityName.Substring(1, this.EntityName.Length - 1)#>FileJsonName = "<#=        this.EntityName#>.json";

        [SetUp]
        public void InitResource()
        {
            TestMockServiceResolver.RegisterInstance<FormEntityDomainService, StubFormEntityDomainService>(_formEntity);

            _<#=        this.EntityName[0].ToString().ToLower()+this.EntityName.Substring(1, this.EntityName.Length - 1)#>Mock.LoadData(_<#=        this.EntityName[0].ToString().ToLower()+this.EntityName.Substring(1, this.EntityName.Length - 1)#>FileJsonName);
        }

        [Test(Description = "测试单测")]
        public void Test1()
        {
            
        }
	}
}