<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.string" name="ClassDescription" #>
<#@ parameter type="System.string" name="TestName" #>
<#@ parameter type="System.string" name="SysName" #>
<#@ parameter type="System.string" name="ModuleName" #>
<#@ parameter type="System.string" name="DomainServiceName" #>
<#@ parameter type="System.string" name="EntityName" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="MethodNames" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="Descriptions" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="PublicServiceNames" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="DomainServiceNames" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="EntityServiceNames" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="TestMockServiceResolvers" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="FileJsonNames" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="LoadDataJsons" #>
using Mysoft.<#=        this.ModuleName#>.DomainServices;
using Mysoft.<#=        this.ModuleName#>.DomainServices.Fakes;
using Mysoft.<#=        this.ModuleName#>.Model;
using Mysoft.<#=        this.SysName#>.Utility;
using Mysoft.Map6.Platform.Services;
using Mysoft.Map6.Platform.Services.Fakes;
using Mysoft.Map6.Platform.Exceptions;
using Mysoft.Map6.Core.Pipeline;
using Mysoft.Map6.TestCore;
using Mysoft.Map6.Core.Tools;
using Mysoft.Map6.Core.EntityBase;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mysoft.<#=        this.ModuleName#>.UnitTest.DomainServices
{
	/// <summary>
    /// <#=        this.ClassDescription#>单测
    /// </summary>
    [TestFixture]
    public class <#=        this.TestName #>
    {
		private readonly <#=        this.DomainServiceName#> _<#=        this.DomainServiceName[0].ToString().ToLower()+ this.DomainServiceName.Substring(1, this.DomainServiceName.Length - 1)#> = new <#=        this.DomainServiceName#>();

<#    for(int i = 0; i < this.EntityServiceNames.Count; i++){ #>
        <#=            EntityServiceNames[i]#>
<#    }#>        

        private readonly StubFormEntityDomainService _formEntity = new StubFormEntityDomainService();
<#    for(int i = 0; i < this.DomainServiceNames.Count; i++){ #>
        <#=            DomainServiceNames[i]#>
<#    }#>

        #region 接口服务
<#    for(int i = 0; i < this.PublicServiceNames.Count; i++){ #>
        <#=            PublicServiceNames[i]#>
<#    }#>
        #endregion

<#    for(int i = 0; i < this.EntityServiceNames.Count; i++){ #>
        <#=            FileJsonNames[i]#>
<#    }#>  
        [SetUp]
        public void InitResource()
        {
            TestMockServiceResolver.RegisterInstance<FormEntityDomainService, StubFormEntityDomainService>(_formEntity);
<#    for(int i = 0; i < this.TestMockServiceResolvers.Count; i++){ #>
            <#=            TestMockServiceResolvers[i]#>
<#    }#>
<#    for(int i = 0; i < this.EntityServiceNames.Count; i++){ #>
            <#=            LoadDataJsons[i]#>
<#    }#> 
        }

        #region  <#=        this.ClassDescription#>单测 <#=        this.MethodNames.Count#>个方法
<#    for(int i = 0; i < this.MethodNames.Count; i++){ #>
        [Test(Description = "<#=            this.Descriptions[i]#>")]
        public void <#=            this.MethodNames[i]#>_Test()
        {
            
        }

<#    }#>
       #endregion
	}
}